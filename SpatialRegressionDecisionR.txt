SpatialRegressionDecision<-function(Formula, DataFrame, Neighbour, OutputName){
	#Runs through logical decision tree for choosing appropriate univariate (spatial) regressions with Wikipedia data
	#Formula: CRIME ~ INC + HOVAL
	#DataFrame: R data frame/table
	#Neighbour: spatial weights matrix file from Geoda. from spdep read.gal or read.gwt2nb, left as type nb
	#OutputName: in quotations, will be created in wd or will overwrite existing file

	#Reload the spdep in case it is not loaded
	library(spdep)
	
	cat("Running Classic OLS Regression...\n")
	#Running the OLS
	OLS<-lm(Formula, data=DataFrame)
	
	#Write OLS Regression Result to the file
	cat("==============================\nOLS Regression Result:\n",file=OutputName, append=FALSE)
	capture.output(print(OLS),file=OutputName, append=TRUE)
	cat("==============================\n\n\n", file=OutputName, append=TRUE)
	
	#Build the spatial weight list
	ListW<-nb2listw(Neighbour)
	
	cat("Running Moran's I test on Classic OLS Regression's residual ...\n")
	#Moran's I test for spatial autocorrelation in OLS residual
	ResidualMoranTest<-lm.morantest(OLS, ListW)
	
	#print(ResidualMoranTest)
	
	ResidualMoranP<-ResidualMoranTest$p.value
	
	cat("==============================\nMoran's I test against the OLS regression residual:\n",file=OutputName, append=TRUE)
	
	if(ResidualMoranP<0.05)
	{
		cat("P-value for OLS Regression Residual Moran's I test is: ", ResidualMoranP, ", and it's significant. Run Lagrangian Multipler Test to decide which SAR model to use\n")
		#cat(print(ResidualMoranTest),file=OutputName, append=TRUE)
		capture.output(print(ResidualMoranTest),file=OutputName, append=TRUE)
		cat("==============================\n\n\n", file=OutputName, append=TRUE)
		
		cat("Running Lagrangian Multiplier Test ...\n")
		#Run Lagrangian Multipler Test
		LagrangianTest <- lm.LMtests(OLS,ListW, test="all")
		
		#Write Lagrangian Test Result to the file
		cat("==============================\nLagrangian Multiplier Test on the OLS Regression Result:\n",file=OutputName, append=TRUE)
		capture.output(print(LagrangianTest),file=OutputName, append=TRUE)
		cat("==============================\n\n\n", file=OutputName, append=TRUE)
		
		#Output the p-value of Lagrangian Multiplier Test
		cat("p-value of LMerr is: ", LagrangianTest$LMerr$p.value, "p-value of LMlag is: ", LagrangianTest$LMlag$p.value,"\n")
			
		if(LagrangianTest$LMerr$p.value<0.05 & LagrangianTest$LMlag$p.value<0.05)
		{
			cat("Both LMerr and LMlag are significant. Compare Robust LMerr and Robust LMlag\n")
			cat("p-value of Robust LMerr is: ", LagrangianTest$LMerr$p.value, "... p-value of Robust LMlag is: ", LagrangianTest$LMlag$p.value, "\n")
			
			#If both LMerr and LMlag are significant, compare RLMerr and RLMlag
			if(LagrangianTest$RLMerr$p.value<0.05 | LagrangianTest$RLMlag$p.value<0.05)
			{
				if(LagrangianTest$RLMlag$p.value < LagrangianTest$RLMerr$p.value)
				{
					cat("Robust LMlag is more significant! Use SAR Lag Model\n")
					SARResult<-lagsarlm(Formula, data=DataFrame, ListW)
				}
				else
				{
					cat("Robust LMerror is more significant! Use SAR Error Model\n")
					SARResult<-errorsarlm(Formula, data=DataFrame, ListW)
				}
			}
			else
			{
				cat("Neither Robust are significant. Model misspecification. Smaller p-value will be run but results should be evaluated.")
				cat("==============================\nNeither Robust are significant. Model misspecification. Smaller p-value will be run but results should be evaluated:\n",file=OutputName, append=TRUE)
				cat("==============================\n\n\n", file=OutputName, append=TRUE)
				
				if(LagrangianTest$RLMerr$p.value < LagrangianTest$RLMlag$p.value)
				{
					SARResult<-errorsarlm(Formula, data=DataFrame, ListW)
				}
				else
				{
					SARResult<-lagsarlm(Formula, data=DataFrame, ListW)
				}
			}
		}
		
		else if(LagrangianTest$LMerr$p.value<0.05 | LagrangianTest$LMlag$p.value<0.05)
		{
			cat("Only one of LMerr and LMlag is significant. The SAR model with smaller p-value will be used.\n")
			#Otherwise choose the SAR model with smaller LM p-value
			if(LagrangianTest$LMlag$p.value<0.05)
			{
				cat("LMlag is more significant! Use SAR Lag Model\n")
				SARResult<-lagsarlm(Formula, data=DataFrame, ListW)
			}
			else if(LagrangianTest$LMerr$p.value<0.05)
			{
				cat("LMerror is more significant! Use SAR Error Model\n")
				SARResult<-errorsarlm(Formula, data=DataFrame, ListW)
			}
		}
		else
		{
			cat("Even though Residual Moran's I was significant (", ResidualMoranP, "), neither LMerr (", LagrangianTest$LMerr$p.value, ") or LMlag (", LagrangianTest$LMlag$p.value, ") are significant. Stick with OLS.\n")
			cat("==============================\n","Even though Residual Moran's I was significant (", ResidualMoranP, "), neither LMerr (", LagrangianTest$LMerr$p.value, ") or LMlag (", LagrangianTest$LMlag$p.value, ") are significant. Stick with OLS.\n", file=OutputName, append=TRUE)
			cat("==============================\n\n\n", file=OutputName, append=TRUE)
			SARResult<-OLS
		}
	}
	else
	{
		cat("P-value for OLS Residual Moran's I test is: ", ResidualMoranP, ", and it's NOT significant. Stop and use OLS\n")
		cat("==============================\n","P-value for OLS Residual Moran's I test is: ", ResidualMoranP, ", and it's NOT significant. Stop and use OLS\n", file=OutputName, append=TRUE)
		SARResult<-OLS
	}	
	
	#Write the Final Regression Result to the file
	cat("==============================\n The Final Regression Result:\n",file=OutputName, append=TRUE)
	capture.output(summary(SARResult),file=OutputName, append=TRUE)
	cat("==============================\n\n\n", file=OutputName, append=TRUE)
	
	SARResult
}